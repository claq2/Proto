// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JobConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "JobConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GetJobConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetJobConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetJobConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetJobConfigResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_JobConfig_2eproto() {
  protobuf_AddDesc_JobConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "JobConfig.proto");
  GOOGLE_CHECK(file != NULL);
  GetJobConfigRequest_descriptor_ = file->message_type(0);
  static const int GetJobConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigRequest, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigRequest, userid_),
  };
  GetJobConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetJobConfigRequest_descriptor_,
      GetJobConfigRequest::default_instance_,
      GetJobConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetJobConfigRequest));
  GetJobConfigResponse_descriptor_ = file->message_type(1);
  static const int GetJobConfigResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigResponse, name_),
  };
  GetJobConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetJobConfigResponse_descriptor_,
      GetJobConfigResponse::default_instance_,
      GetJobConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetJobConfigResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_JobConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetJobConfigRequest_descriptor_, &GetJobConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetJobConfigResponse_descriptor_, &GetJobConfigResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_JobConfig_2eproto() {
  delete GetJobConfigRequest::default_instance_;
  delete GetJobConfigRequest_reflection_;
  delete GetJobConfigResponse::default_instance_;
  delete GetJobConfigResponse_reflection_;
}

void protobuf_AddDesc_JobConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017JobConfig.proto\"4\n\023GetJobConfigRequest"
    "\022\r\n\005jobId\030\001 \001(\t\022\016\n\006userId\030\002 \001(\t\"$\n\024GetJo"
    "bConfigResponse\022\014\n\004name\030\001 \001(\t", 109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "JobConfig.proto", &protobuf_RegisterTypes);
  GetJobConfigRequest::default_instance_ = new GetJobConfigRequest();
  GetJobConfigResponse::default_instance_ = new GetJobConfigResponse();
  GetJobConfigRequest::default_instance_->InitAsDefaultInstance();
  GetJobConfigResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_JobConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_JobConfig_2eproto {
  StaticDescriptorInitializer_JobConfig_2eproto() {
    protobuf_AddDesc_JobConfig_2eproto();
  }
} static_descriptor_initializer_JobConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GetJobConfigRequest::kJobIdFieldNumber;
const int GetJobConfigRequest::kUserIdFieldNumber;
#endif  // !_MSC_VER

GetJobConfigRequest::GetJobConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetJobConfigRequest)
}

void GetJobConfigRequest::InitAsDefaultInstance() {
}

GetJobConfigRequest::GetJobConfigRequest(const GetJobConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetJobConfigRequest)
}

void GetJobConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  jobid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetJobConfigRequest::~GetJobConfigRequest() {
  // @@protoc_insertion_point(destructor:GetJobConfigRequest)
  SharedDtor();
}

void GetJobConfigRequest::SharedDtor() {
  if (jobid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jobid_;
  }
  if (userid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete userid_;
  }
  if (this != default_instance_) {
  }
}

void GetJobConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetJobConfigRequest_descriptor_;
}

const GetJobConfigRequest& GetJobConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JobConfig_2eproto();
  return *default_instance_;
}

GetJobConfigRequest* GetJobConfigRequest::default_instance_ = NULL;

GetJobConfigRequest* GetJobConfigRequest::New() const {
  return new GetJobConfigRequest;
}

void GetJobConfigRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_jobid()) {
      if (jobid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        jobid_->clear();
      }
    }
    if (has_userid()) {
      if (userid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        userid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetJobConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetJobConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string jobId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jobid().data(), this->jobid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jobid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userId;
        break;
      }

      // optional string userId = 2;
      case 2: {
        if (tag == 18) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "userid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetJobConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetJobConfigRequest)
  return false;
#undef DO_
}

void GetJobConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetJobConfigRequest)
  // optional string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jobid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jobid(), output);
  }

  // optional string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetJobConfigRequest)
}

::google::protobuf::uint8* GetJobConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetJobConfigRequest)
  // optional string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jobid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jobid(), target);
  }

  // optional string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetJobConfigRequest)
  return target;
}

int GetJobConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobid());
    }

    // optional string userId = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetJobConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetJobConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetJobConfigRequest::MergeFrom(const GetJobConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetJobConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobConfigRequest::CopyFrom(const GetJobConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobConfigRequest::IsInitialized() const {

  return true;
}

void GetJobConfigRequest::Swap(GetJobConfigRequest* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(userid_, other->userid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetJobConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetJobConfigRequest_descriptor_;
  metadata.reflection = GetJobConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetJobConfigResponse::kNameFieldNumber;
#endif  // !_MSC_VER

GetJobConfigResponse::GetJobConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetJobConfigResponse)
}

void GetJobConfigResponse::InitAsDefaultInstance() {
}

GetJobConfigResponse::GetJobConfigResponse(const GetJobConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetJobConfigResponse)
}

void GetJobConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetJobConfigResponse::~GetJobConfigResponse() {
  // @@protoc_insertion_point(destructor:GetJobConfigResponse)
  SharedDtor();
}

void GetJobConfigResponse::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void GetJobConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetJobConfigResponse_descriptor_;
}

const GetJobConfigResponse& GetJobConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_JobConfig_2eproto();
  return *default_instance_;
}

GetJobConfigResponse* GetJobConfigResponse::default_instance_ = NULL;

GetJobConfigResponse* GetJobConfigResponse::New() const {
  return new GetJobConfigResponse;
}

void GetJobConfigResponse::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetJobConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetJobConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetJobConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetJobConfigResponse)
  return false;
#undef DO_
}

void GetJobConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetJobConfigResponse)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetJobConfigResponse)
}

::google::protobuf::uint8* GetJobConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetJobConfigResponse)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetJobConfigResponse)
  return target;
}

int GetJobConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetJobConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetJobConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetJobConfigResponse::MergeFrom(const GetJobConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetJobConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobConfigResponse::CopyFrom(const GetJobConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobConfigResponse::IsInitialized() const {

  return true;
}

void GetJobConfigResponse::Swap(GetJobConfigResponse* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetJobConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetJobConfigResponse_descriptor_;
  metadata.reflection = GetJobConfigResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
