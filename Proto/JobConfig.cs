// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class JobConfig {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_GetJobConfigRequest__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::GetJobConfigRequest, global::GetJobConfigRequest.Builder> internal__static_GetJobConfigRequest__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_GetJobConfigResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::GetJobConfigResponse, global::GetJobConfigResponse.Builder> internal__static_GetJobConfigResponse__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static JobConfig() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "Cg9Kb2JDb25maWcucHJvdG8iPgoTR2V0Sm9iQ29uZmlnUmVxdWVzdBINCgVq" + 
        "b2JJZBgBIAEoCRIOCgZ1c2VySWQYAiABKAkqCAhkEICAgIACIiQKFEdldEpv" + 
        "YkNvbmZpZ1Jlc3BvbnNlEgwKBG5hbWUYASABKAk=");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_GetJobConfigRequest__Descriptor = Descriptor.MessageTypes[0];
      internal__static_GetJobConfigRequest__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::GetJobConfigRequest, global::GetJobConfigRequest.Builder>(internal__static_GetJobConfigRequest__Descriptor,
              new string[] { "JobId", "UserId", });
      internal__static_GetJobConfigResponse__Descriptor = Descriptor.MessageTypes[1];
      internal__static_GetJobConfigResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::GetJobConfigResponse, global::GetJobConfigResponse.Builder>(internal__static_GetJobConfigResponse__Descriptor,
              new string[] { "Name", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class GetJobConfigRequest : pb::ExtendableMessage<GetJobConfigRequest, GetJobConfigRequest.Builder> {
  private GetJobConfigRequest() { }
  private static readonly GetJobConfigRequest defaultInstance = new GetJobConfigRequest().MakeReadOnly();
  private static readonly string[] _getJobConfigRequestFieldNames = new string[] { "jobId", "userId" };
  private static readonly uint[] _getJobConfigRequestFieldTags = new uint[] { 10, 18 };
  public static GetJobConfigRequest DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override GetJobConfigRequest DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override GetJobConfigRequest ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::JobConfig.internal__static_GetJobConfigRequest__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<GetJobConfigRequest, GetJobConfigRequest.Builder> InternalFieldAccessors {
    get { return global::JobConfig.internal__static_GetJobConfigRequest__FieldAccessorTable; }
  }
  
  public const int JobIdFieldNumber = 1;
  private bool hasJobId;
  private string jobId_ = "";
  public bool HasJobId {
    get { return hasJobId; }
  }
  public string JobId {
    get { return jobId_; }
  }
  
  public const int UserIdFieldNumber = 2;
  private bool hasUserId;
  private string userId_ = "";
  public bool HasUserId {
    get { return hasUserId; }
  }
  public string UserId {
    get { return userId_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!ExtensionsAreInitialized) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _getJobConfigRequestFieldNames;
    pb::ExtendableMessage<GetJobConfigRequest, GetJobConfigRequest.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
    if (hasJobId) {
      output.WriteString(1, field_names[0], JobId);
    }
    if (hasUserId) {
      output.WriteString(2, field_names[1], UserId);
    }
    extensionWriter.WriteUntil(536870912, output);
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasJobId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, JobId);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserId);
      }
      size += ExtensionsSerializedSize;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static GetJobConfigRequest ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigRequest ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static GetJobConfigRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GetJobConfigRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private GetJobConfigRequest MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(GetJobConfigRequest prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::ExtendableBuilder<GetJobConfigRequest, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(GetJobConfigRequest cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private GetJobConfigRequest result;
    
    private GetJobConfigRequest PrepareBuilder() {
      if (resultIsReadOnly) {
        GetJobConfigRequest original = result;
        result = new GetJobConfigRequest();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override GetJobConfigRequest MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::GetJobConfigRequest.Descriptor; }
    }
    
    public override GetJobConfigRequest DefaultInstanceForType {
      get { return global::GetJobConfigRequest.DefaultInstance; }
    }
    
    public override GetJobConfigRequest BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is GetJobConfigRequest) {
        return MergeFrom((GetJobConfigRequest) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(GetJobConfigRequest other) {
      if (other == global::GetJobConfigRequest.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasJobId) {
        JobId = other.JobId;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
        this.MergeExtensionFields(other);
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_getJobConfigRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _getJobConfigRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasJobId = input.ReadString(ref result.jobId_);
            break;
          }
          case 18: {
            result.hasUserId = input.ReadString(ref result.userId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasJobId {
      get { return result.hasJobId; }
    }
    public string JobId {
      get { return result.JobId; }
      set { SetJobId(value); }
    }
    public Builder SetJobId(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasJobId = true;
      result.jobId_ = value;
      return this;
    }
    public Builder ClearJobId() {
      PrepareBuilder();
      result.hasJobId = false;
      result.jobId_ = "";
      return this;
    }
    
    public bool HasUserId {
      get { return result.hasUserId; }
    }
    public string UserId {
      get { return result.UserId; }
      set { SetUserId(value); }
    }
    public Builder SetUserId(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUserId = true;
      result.userId_ = value;
      return this;
    }
    public Builder ClearUserId() {
      PrepareBuilder();
      result.hasUserId = false;
      result.userId_ = "";
      return this;
    }
  }
  static GetJobConfigRequest() {
    object.ReferenceEquals(global::JobConfig.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class GetJobConfigResponse : pb::GeneratedMessage<GetJobConfigResponse, GetJobConfigResponse.Builder> {
  private GetJobConfigResponse() { }
  private static readonly GetJobConfigResponse defaultInstance = new GetJobConfigResponse().MakeReadOnly();
  private static readonly string[] _getJobConfigResponseFieldNames = new string[] { "name" };
  private static readonly uint[] _getJobConfigResponseFieldTags = new uint[] { 10 };
  public static GetJobConfigResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override GetJobConfigResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override GetJobConfigResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::JobConfig.internal__static_GetJobConfigResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<GetJobConfigResponse, GetJobConfigResponse.Builder> InternalFieldAccessors {
    get { return global::JobConfig.internal__static_GetJobConfigResponse__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _getJobConfigResponseFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static GetJobConfigResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static GetJobConfigResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static GetJobConfigResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GetJobConfigResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private GetJobConfigResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(GetJobConfigResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<GetJobConfigResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(GetJobConfigResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private GetJobConfigResponse result;
    
    private GetJobConfigResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        GetJobConfigResponse original = result;
        result = new GetJobConfigResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override GetJobConfigResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::GetJobConfigResponse.Descriptor; }
    }
    
    public override GetJobConfigResponse DefaultInstanceForType {
      get { return global::GetJobConfigResponse.DefaultInstance; }
    }
    
    public override GetJobConfigResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is GetJobConfigResponse) {
        return MergeFrom((GetJobConfigResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(GetJobConfigResponse other) {
      if (other == global::GetJobConfigResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_getJobConfigResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _getJobConfigResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static GetJobConfigResponse() {
    object.ReferenceEquals(global::JobConfig.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
